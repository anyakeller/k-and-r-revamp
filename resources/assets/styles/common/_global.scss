/* TEXT
* ================================================================ TEXT
*/

// Font setup
@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Thin.ttf") format("truetype");
  font-weight: 100;
}

@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Light.ttf") format("truetype");
  font-weight: 200 300;
}

@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Regular.ttf") format("truetype");
  font-weight: 400;
}

@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Medium.ttf") format("truetype");
  font-weight: 500;
}

@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Bold.ttf") format("truetype");
  font-weight: 600 700;
}

@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Black.ttf") format("truetype");
  font-weight: 800 900;
}

// H tags

h1,
h2,
h3 {
  color: $primary;
}

// Span
span:last-child {
  font-size: 0.9em;
}

/* LAYOUT
* ================================================================ LAYOUT
*/

/*
 * Mixins for standardized ASPECT RATIO media queries
 * Important Notes:
 *  - when including these mixins, call them in the order below
 *  - $exact - determines if the content of the block should only apply to that breakpoint and not spill into the following one
 *  - $devcolor - easy way to turn on a background-color for testing
 *
 */

// Phones in portrait
@mixin aspect-ratio-phones-portrait($devcolor: false) {
  @media screen and (max-width: 480px) and (min-aspect-ratio: 3/4) {
    @if $devcolor {
      background-color: rgba(28, 16, 128, 0.6); // blurple
    }

    @content;
  }
}

/*
 * Mixin to set max width given a map with a width and
 * the corresponding bootstrap size
 * $limits is a map {$size: $limit}
*/
@mixin width-limiter($limits) {
  @each $size, $limit in $limits {
    @include media-breakpoint-up($size) {
      max-width: $limit;
    }
  }
}

.container-main {
  @include make-container(1rem);

  @include media-breakpoint-up(xs) {
    padding: inherit {
      right: 1rem;
      left: 1rem;
    }
  }

  @include media-breakpoint-up(md) {
    padding: inherit {
      right: 3rem;
      left: 3rem;
    }
  }

  @include media-breakpoint-up(lg) {
    padding: inherit {
      right: 11rem;
      left: 11rem;
    }
  }

  @include media-breakpoint-up(xl) {
    padding: inherit {
      right: 14rem;
      left: 14rem;
    }
  }

  & > div,
  .main {
    @extend .mx-auto;

    $container-main-limits: (
      lg: 694px,
      xl: 840px
    );

    &:not(.customwidthlimit) {
      @include width-limiter($container-main-limits);
    }

    &.customwidthlimit {
      width: 100%;
    }
  }
}

// General styling for all video thumbnails
// .video-thumbnail-div {
//   position: relative;
//   display: flex;
//   align-items: center;
//   justify-content: center;
//
//   .video-thumbnail-length-div {
//     text-align: end;
//     position: absolute;
//     display: flex;
//     align-items: flex-end;
//     top: 0;
//     right: 0;
//     height: 100%;
//
//     .video-thumbnail-length-span {
//       padding: 0 2px;
//       position: relative;
//       background-color: rgba(38, 38, 38, 0.8);
//       color: white;
//     }
//   }
// }
