/*
 Skinny container widths for using the media-breakpoint-up() mixin
*/
$skinny-container-md: 600px;
$skinny-container-lg: 700px;
$skinny-container-xl: 775px;

/* TEXT
* ================================================================ TEXT
*/

// Font setup
@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Thin.ttf") format("truetype");
  font-weight: 100;
}

@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Light.ttf") format("truetype");
  font-weight: 200 300;
}

@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Regular.ttf") format("truetype");
  font-weight: 400;
}

@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Medium.ttf") format("truetype");
  font-weight: 500;
}

@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Bold.ttf") format("truetype");
  font-weight: 600 700;
}

@font-face {
  font-family: Yantramanav;
  src: url("../fonts/Yantramanav/Yantramanav-Black.ttf") format("truetype");
  font-weight: 800 900;
}

// H tags

h1,
h2,
h3,
h4 {
  color: $primary;
}

/* LAYOUT
* ================================================================ LAYOUT
*/

/*
 * Mixins for standardized ASPECT RATIO media queries
 * Important Notes:
 *  - when including these mixins, call them in the order below
 *  - $exact - determines if the content of the block should only apply to that breakpoint and not spill into the following one
 *  - $devcolor - easy way to turn on a background-color for testing
 *
 */

// Phones in landscape
@mixin aspect-ratio-phones-landscape($devcolor: false) {
  @media (min-aspect-ratio: 4/3) {
    @if $devcolor {
      background-color: rgba(28, 16, 128, 0.6); // blurple
    }

    @content;
  }
}

// $limits is a map
@mixin width-limiter($limits) {
  @each $size, $limit in $limits {
    @include media-breakpoint-up($size) {
      max-width: $limit;
    }
  }
}

.container-main {
  @include make-container(1rem);

  @include media-breakpoint-up(sm) {
    padding: inherit {
      right: 1rem;
      left: 1rem;
    }
  }

  @include media-breakpoint-up(md) {
    padding: inherit {
      right: 4rem;
      left: 4rem;
    }
  }

  @include media-breakpoint-up(lg) {
    padding: inherit {
      right: 7rem;
      left: 7rem;
    }
  }

  @include media-breakpoint-up(xl) {
    padding: inherit {
      right: 8rem;
      left: 8rem;
    }
  }

  & > div,
  .main {
    @extend .mx-auto;

    $container-main-limits: (
      md: 750px,
      lg: 800px,
      xl: 840px
    );

    &:not(.nowidthlimit) {
      @include width-limiter($container-main-limits);
    }

    &.nowidthlimit {
      width: 100%;
    }
  }
}
